/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mik.gui;

import java.io.File;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import mik.encryption.ImageEncryptDecrypt;
import mik.entity.User;
import mik.processor.FileProcessor;
import mik.processor.StringProcessor;
import org.apache.log4j.Logger;

/**
 *
 * @author Rasel
 */
public class MainGui extends javax.swing.JFrame {

    /**
     * Creates new form MainGui
     */
    static final Logger logger = Logger.getLogger(MainGui.class);
    private User myDetails;
    ArrayList<String> fileList = new ArrayList<String>();
    String fileName = "";
    boolean isDirectoryChoosed = false;
    boolean isFileChoosed = false;

    public MainGui() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        initComponents();
        this.setTitle("File Savior");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        this.jFileChooser.setFileFilter(filter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        pnlTabbedHolder = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        lblWelcomeText = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jRbtnUseDefaultPass = new javax.swing.JRadioButton();
        jRbtnNewKey = new javax.swing.JRadioButton();
        lblKey = new javax.swing.JLabel();
        keyField = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        lblRetypeKey = new javax.swing.JLabel();
        ReTupeKeyField = new javax.swing.JPasswordField();
        lblPasswordMismatch = new javax.swing.JLabel();
        jDirectoryChooser = new javax.swing.JFileChooser();
        jFileChooser = new javax.swing.JFileChooser();
        pnlButtonHolder = new javax.swing.JPanel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        btnEncrypt = new javax.swing.JButton();
        btnDecrypt = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlTabbedHolder.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setEnabled(false);

        lblWelcomeText.setText("Welcome ");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Important Note: ");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("You can encrypt or decrypt with your Log in password using as key or you can provide a new key which must be 16 character long. If you use a new key for encryption and decryption then you have to remember the key because your given key will not be stored by the FileSavior. Noted that new encryption key will not replace your password.");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        buttonGroup1.add(jRbtnUseDefaultPass);
        jRbtnUseDefaultPass.setSelected(true);
        jRbtnUseDefaultPass.setText("I will use my Log in password as key");

        buttonGroup1.add(jRbtnNewKey);
        jRbtnNewKey.setText("I want to use different key ");

        lblKey.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblKey.setText("Key:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Must be 16 character long!");

        lblRetypeKey.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblRetypeKey.setText("Re-type key:");

        lblPasswordMismatch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPasswordMismatch.setForeground(new java.awt.Color(153, 0, 0));
        lblPasswordMismatch.setText("Password mismatch!");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblRetypeKey)
                    .addComponent(lblKey)
                    .addComponent(jLabel1)
                    .addComponent(lblWelcomeText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRbtnNewKey)
                    .addComponent(jRbtnUseDefaultPass)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ReTupeKeyField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(keyField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(lblPasswordMismatch))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblWelcomeText)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jRbtnUseDefaultPass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRbtnNewKey)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKey)
                    .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRetypeKey)
                    .addComponent(ReTupeKeyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPasswordMismatch))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Choose Key", jPanel3);

        jDirectoryChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        jDirectoryChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDirectoryChooserActionPerformed(evt);
            }
        });
        jTabbedPane1.addTab("Choose Directory", jDirectoryChooser);

        jFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooserActionPerformed(evt);
            }
        });
        jTabbedPane1.addTab("Choose File", jFileChooser);

        javax.swing.GroupLayout pnlTabbedHolderLayout = new javax.swing.GroupLayout(pnlTabbedHolder);
        pnlTabbedHolder.setLayout(pnlTabbedHolderLayout);
        pnlTabbedHolderLayout.setHorizontalGroup(
            pnlTabbedHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabbedHolderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pnlTabbedHolderLayout.setVerticalGroup(
            pnlTabbedHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabbedHolderLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pnlButtonHolder.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText("Replace original file with encrypted file");

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("Save in a different directory");

        btnEncrypt.setText("Encrypt");
        btnEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryptActionPerformed(evt);
            }
        });

        btnDecrypt.setText("Decrypt");

        btnLogOut.setText("Log out");

        javax.swing.GroupLayout pnlButtonHolderLayout = new javax.swing.GroupLayout(pnlButtonHolder);
        pnlButtonHolder.setLayout(pnlButtonHolderLayout);
        pnlButtonHolderLayout.setHorizontalGroup(
            pnlButtonHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonHolderLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(pnlButtonHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonHolderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEncrypt)
                .addGap(18, 18, 18)
                .addComponent(btnDecrypt)
                .addGap(18, 18, 18)
                .addComponent(btnLogOut)
                .addGap(53, 53, 53))
        );
        pnlButtonHolderLayout.setVerticalGroup(
            pnlButtonHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonHolderLayout.createSequentialGroup()
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlButtonHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEncrypt)
                    .addComponent(btnDecrypt)
                    .addComponent(btnLogOut))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTabbedHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlButtonHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(pnlTabbedHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlButtonHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooserActionPerformed
        // TODO add your handling code here:
        isFileChoosed = true;
        fileName = this.jFileChooser.getSelectedFile().getName();
        System.out.println("File name--" + fileName);
    }//GEN-LAST:event_jFileChooserActionPerformed

    private void jDirectoryChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDirectoryChooserActionPerformed
        // TODO add your handling code here:
        isDirectoryChoosed = true;
        System.out.println("directory path==" + jDirectoryChooser.getSelectedFile().getAbsolutePath());
        File folder = new File(jDirectoryChooser.getSelectedFile().getAbsolutePath());
        File[] listOfFiles = folder.listFiles();

        for (int i = 0; i < listOfFiles.length; i++) {
            if (listOfFiles[i].isFile()) {
                fileList.add(listOfFiles[i].getName());
            }
        }
    }//GEN-LAST:event_jDirectoryChooserActionPerformed

    private void btnEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryptActionPerformed
        // TODO add your handling code here:
        FileProcessor fp = new FileProcessor();
        StringProcessor sp = new StringProcessor();
        ImageEncryptDecrypt encryptor = new ImageEncryptDecrypt();
        if (this.jRbtnUseDefaultPass.isSelected()) {
            encryptor.setStrPassword(myDetails.getPassword());
        } else if (this.jRbtnNewKey.isSelected()) {
            char[] pass = this.keyField.getPassword();
            String password = new String(pass);
            encryptor.setStrPassword(password);
        }

        if (isDirectoryChoosed) {

        } else if (isFileChoosed) {
            String fileName = jFileChooser.getSelectedFile().getName();
            String filePath = jFileChooser.getSelectedFile().getPath();
            fileName = sp.getFileNameAfterEncryption(fileName);
            logger.info("MainGui:: btnEncryptActionPerformed-- file name after encryption would be --" + fileName);
            String fileAbsolutePath = jFileChooser.getSelectedFile().getAbsolutePath();
            logger.info("MainGui:: btnEncryptActionPerformed-- file absolute path --" + fileAbsolutePath);
            byte[] fileAsByteStream = fp.readFileAsByteStream(fileAbsolutePath);
            logger.info("MainGui:: btnEncryptActionPerformed-- file converted to byte stream");
            byte[] decryptedByteStream = encryptor.getEncryptedByteStream(fileAsByteStream);
            fp.writeByteStreamAsAFile(filePath + File.separator + "FileSavior", fileName, decryptedByteStream);

        } else {
            JOptionPane.showMessageDialog(rootPane, "You have to choose a file or a directory first!");
        }

    }//GEN-LAST:event_btnEncryptActionPerformed

    public User getMyDetails() {
        return myDetails;
    }

    public void setMyDetails(User myDetails) {
        this.myDetails = myDetails;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField ReTupeKeyField;
    private javax.swing.JButton btnDecrypt;
    private javax.swing.JButton btnEncrypt;
    private javax.swing.JButton btnLogOut;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JFileChooser jDirectoryChooser;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRbtnNewKey;
    private javax.swing.JRadioButton jRbtnUseDefaultPass;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPasswordField keyField;
    private javax.swing.JLabel lblKey;
    private javax.swing.JLabel lblPasswordMismatch;
    private javax.swing.JLabel lblRetypeKey;
    private javax.swing.JLabel lblWelcomeText;
    private javax.swing.JPanel pnlButtonHolder;
    private javax.swing.JPanel pnlTabbedHolder;
    // End of variables declaration//GEN-END:variables
}
